<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>Conference on Marco Bacis</title><link>https://marcobacis.com/tags/conference/</link><description>Recent content in Conference on Marco Bacis</description><language>en-uk</language><copyright>© Copyright Marco Bacis</copyright><lastBuildDate>Fri, 29 Mar 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://marcobacis.com/tags/conference/index.xml" rel="self" type="application/rss+xml"/><item><title>Polenta &amp; Deploy 2024</title><link>https://marcobacis.com/blog/2024-polenta-and-deploy/</link><pubDate>Fri, 29 Mar 2024 00:00:00 +0000</pubDate><guid>https://marcobacis.com/blog/2024-polenta-and-deploy/</guid><description>&lt;p>Hi 👋 welcome to a new post.&lt;/p>
&lt;p>Today, I want to share a small glimpse of my experience at the 2024 Polenta &amp;amp; Deploy event!&lt;/p>
&lt;p>Polenta&amp;amp;Deploy is an event taking place nestled beneath the mountains at Pinzolo. Over the course of three days, developers (and others) come together to enjoy the fresh air and discuss about tech (and not only that&amp;hellip;) in an open space setup.&lt;/p>
&lt;p>&lt;em>(Disclaimer: I didn&amp;rsquo;t attend the previous editions, so please correct me if I&amp;rsquo;m mistaken)&lt;/em>&lt;/p></description><media:content url="https://marcobacis.com/blog/2024-polenta-and-deploy/cover_hu6181639306233721345.jpg" width="262" height="262" medium="image" type="image/jpeg"><media:thumbnail url="https://marcobacis.com/blog/2024-polenta-and-deploy/cover_hu6181639306233721345.jpg" width="262" height="262"/></media:content><content:encoded><![CDATA[
        <img src="https://marcobacis.com/blog/2024-polenta-and-deploy/cover_hu6181639306233721345.jpg" title="%!s(<nil>)" alt="%!s(<nil>)"/>
          <p>Hi 👋 welcome to a new post.</p>
<p>Today, I want to share a small glimpse of my experience at the 2024 Polenta &amp; Deploy event!</p>
<p>Polenta&amp;Deploy is an event taking place nestled beneath the mountains at Pinzolo. Over the course of three days, developers (and others) come together to enjoy the fresh air and discuss about tech (and not only that&hellip;) in an open space setup.</p>
<p><em>(Disclaimer: I didn&rsquo;t attend the previous editions, so please correct me if I&rsquo;m mistaken)</em></p>
<p>It all started after COVID restriction were lifted in 2021, and the <del>old</del> young trio of <a href="https://www.linkedin.com/in/aacerbis/"  target="_blank" >Alberto Acerbis</a>, <a href="https://www.linkedin.com/in/alessandrocolla/"  target="_blank" >Alessandro Colla</a> and <a href="https://www.linkedin.com/in/ferdinandosantacroce/"  target="_blank" >Ferdinando Santacroce</a> gathered and pondered &ldquo;We want to meet people again, we&rsquo;re tired of online events!&rdquo;.</p>
<p>From a telegram chat and a shared google doc, the three were able to organise an unconference, and we are now at the third edition.</p>
<p>Below you can find my &ldquo;journal&rdquo; of the event. Enjoy! (I know I&rsquo;m the only one reading through the entire post, but that&rsquo;s ok 😎).</p>
<h2 id="my-experience-at-polentadeploy">My Experience at Polenta&amp;Deploy</h2>
<h3 id="first-day-trip-and-nightly-snowshoe-hike">First Day: Trip and Nightly Snowshoe hike</h3>
<p>The first day started way before arriving at the hotel. I left Bergamo for the mountains with a guest: <a href="https://jagasantagostino.com/"  target="_blank" >Jaga</a>! During the trip we talked about his newfound love for home automation (I discovered a great millimiter-wave sensor that can track inside the house, and much more), home servers and his life in Sardinia.</p>
<p>After arriving at the nice small village of Pinzolo, it was time for the first activity of the Polenta&amp;Deploy: lunch! To inaugurate the event, I ate a nice Polenta with pork shank.</p>
<p>


<img class="img-fluid image" src="https://marcobacis.com/blog/2024-polenta-and-deploy/./polenta_pork.jpg" title="Best way to start Polenta&amp;Deploy" alt="Best way to start Polenta&amp;Deploy" />




<figcaption class="caption">Best way to start Polenta&Deploy</figcaption>

</figure></p>
<p>With a full stomach, it was now time for the first <strong>real</strong> activity: along with other fearless souls, we did a snowshoe hike in the Madonna di Campiglio park. It&rsquo;s been been 15 years since the last time I put snowshoes on, and it was not so easy! I did struggle a bit, but in the end we arrived at the hut (well, more like a 5-star restaurant&hellip;we&rsquo;re  in Trentino after all). Although we didn&rsquo;t hit our planned destination (we were 1 km short, and 200m below), we were still pretty satisfied. The hike was fantastic. I&rsquo;d never been on a snowy mountain at dusk before! The atmosphere was unreal, and seeing the sunset over the snow was pure magic.</p>
<p>


<img class="img-fluid image" src="https://marcobacis.com/blog/2024-polenta-and-deploy/./sunset_snow.jpg" title="" alt="" />




</figure></p>
<h3 id="second-day-unconference-and-a-lot-of-food">Second Day: Unconference (and a lot of food)</h3>
<p>After a long night of sleep (about 5 hours), it was time for the main dish of the Polenta&amp;Deploy: the <strong>Unconference</strong>!</p>
<p>We all gathered in the hotel hall and kicked off the <em>marketplace</em>. Like in every open space I attend, I stayed back and didn&rsquo;t proposed anything, observing the others discuss where to put their session. I know I&rsquo;m not getting the most out of the event by not proposing a discussion, session or even just sharing a question I have. I&rsquo;m still looking for compelling or &ldquo;unique&rdquo; enough not already covered by the other sessions!</p>
<p>I already explained what is an open space <a href="https://marcobacis.com/blog/socrates-2023/"  target="_blank" >here</a>: the core idea is to let the participants choose what, when and where to talk, by creating a neverending &ldquo;coffee-break&rdquo;.</p>
<p>Here&rsquo;s a (brief) list of the sessions I attended (some for full, others briefly):</p>
<p><strong>CI: From Stars to Stables</strong> -  <a href="https://www.linkedin.com/in/marco-fracassi/"  target="_blank" >Marco Fracassi</a></p>
<p>In his session, Marco shared his journey with Continuous Integration. It all began during his time at 7Pixel, where they had a single (physical) &ldquo;build machine&rdquo; shared among colleagues. Despite this (&ldquo;obsolete&rdquo; by today standards) setup, they were able to develop effectively with trunk-based development and CI.</p>
<p>However, in In his current company, the CI process is flawed. Developers work in isolation on their branches, which are then reviewed (and approved by at least 2 colleagues), merged into the dev branch and checked by QA. The issue arises after the QA phase: if the feature passes the QA review, it&rsquo;s merged into main - not starting from dev, but from the original feature branch! This destroys the concept of continuous integration, as the dev and main branches are never integrated!</p>
<p>We discussed what might have brought to this situation and how could Marco solve it. The idea is that developing in this way absolves developers of responsibility (&ldquo;QA approved this, so it must be fine&rdquo;), yet it doesn&rsquo;t actually improve code quality  or system reliability. In fact, this process risks breaking main, as integration occurs after the checks.</p>
<p>The group discussed some strategies (e.g. abolishing the dev branch, introducing feature flags and so on), but we all came to a conclusion: this situation needs a &ldquo;social&rdquo; solution, not only a technical one. Solving the problem requires to break the status quo inside the company, which is difficult when everything is going fine from the economical perspective (even if the code quality suffers).</p>
<p><strong>Ugly Code and Refactor</strong> - <a href="https://www.linkedin.com/in/gianni-bombelli/"  target="_blank" >Gianni Bombelli</a></p>
<p>Gianni showed us a snippet of production code from one of his past projects, and then asked how we would refactor it. The code was a tangled mess of if-else, but at least it was tested!</p>
<p>The crowd discussed on which steps to take to make the code more readable (e.g. extracting methods, creating interfaces, adding smaller methods, embedding magic numbers into constants etc&hellip;). Gianni was able to refactor it using polymorphism (a somewhat-strategy-pattern) and he showed us how they did it at the time.</p>
<p>It was a valuable session on pragmatism (not every refactoring and optimisation is mandatory) and how to work on production code effectively.</p>
<p><strong>Specops</strong> - <a href="https://www.linkedin.com/in/alessandrocolla/"  target="_blank" >Alessandro Colla</a></p>
<p>Every job advert seems to insist that developers to &ldquo;must be able to work under stress&rdquo;. We all recognise it as a red flag, but it&rsquo;s something we cannot avoid no matter how hard we try. Given this, how can we train people to handle and manage stress effectively?</p>
<p>Alessandro drew inspiration from his martial arts and combat training and started a discussion with us. We exchanged a lot of quotes, links and ideas regarding team building and humility to stress management and being a great team player in general!</p>
<p>Another nice perk of being at an unconference&hellip;the discussion was done under the sun on the hotel terrace! Some of us were on reclining chairs.. as for me, I relaxed on a beanbag chair the entire time (talk about managing stress!).</p>
<p><strong>Recursive Thought</strong> - <a href="https://www.linkedin.com/in/emanueledb/"  target="_blank" >Emanuele Delbono</a></p>
<p>Emanuele held a live coding session on Elixir, showing the exercises he used while reading The Little Schemer book (his solutions can be found <a href="https://github.com/emadb/the_little_alchemist"  target="_blank" >here</a>).</p>
<p>All the exercises he showed were about recursion. I understood some of them, but the latest were more difficult than expected! His explanation on tail recursion was clear, and I finally understood what it meant.</p>
<p><strong>Kubernetes Showdown</strong> - <a href="https://www.linkedin.com/in/ludusrusso/"  target="_blank" >Ludovico Russo</a>, <a href="https://www.linkedin.com/in/andreafrancia/"  target="_blank" >Andrea Francia</a>**</p>
<p>In this session, Andrea ranted about Kubernetes, explaining why he think it&rsquo;s too complex to be used in most projects. On the other hand, Ludovico showed his <a href="https://www.ludusrusso.dev/blog/2022/09/kubernello"  target="_blank" >kubernello</a>, a small VM instance with kubernetes that he uses for small production projects. His setup was quite interesting, with automatic certificates and dns management, gitops and all at low cost! He was so inspiring I might actually create a small k8s cluster on Raspberry Pis (yes, it might be trivial and not interesting, but I don&rsquo;t care).</p>
<p><strong>Polymorphism in different languages</strong> - <a href="https://www.linkedin.com/in/angeloceccato/"  target="_blank" >Angelo Ceccato</a>**</p>
<p>Angelo started his discussion by showing a graph with all the main programming languages and going back to the roots. Together with the participants, he tried to distill what constitutes Object-Oriented Programming (we had a board full of post-it with definitions). He then tried to link together concepts from all these languages and define the main topic of his discussion: Polymorphism.</p>
<p>I must admit that I didn&rsquo;t follow the discussion too much, but it provided a lot of perspectives on concepts we don&rsquo;t usually think too much about in OOP. It was a trip in the history of programming languages concepts and styles.</p>
<p><strong>There is no silver bullet</strong> - <a href="https://www.linkedin.com/in/morialberto/"  target="_blank" >Alberto Mori</a></p>
<p>Alberto asked for help/feedback on a talk he proposed to a conference. The title of his talk was &ldquo;There&rsquo;s no siver bullet&rdquo; (a clear reference to Fred Brooks&rsquo; paper, even if he didn&rsquo;t know it 😂) and the idea was to discuss complexity and how some techniques, even if not perfect, can help reduce it.</p>
<p>What started as a feedback session became a discussion on managing the complexity of human and business behaviour. We talked about essential and accidental complexity, different &ldquo;layers&rdquo; of complexity, on how a company can learn to tackle the complexity and how to communicate it to the customer and the developers without being overwhelmed by the task.</p>
<h3 id="third-day-unconference-and-goodbye">Third Day: Unconference and Goodbye</h3>
<p>The last day started with a good breakfast (the perks of good conferences). While a small group went out for a <em>short</em> hike (more on that later), we picked up where we left off the day before and continued the unconference.</p>
<p>Here are the sessions I attended (just three, we finished by midday):</p>
<p><strong>Intro to Qwik</strong> - <a href="https://www.linkedin.com/in/ludusrusso/"  target="_blank" >Ludovico Russo</a></p>
<p>A nice quirk of unconferences is the chance to <del>force</del> <em>ask</em> other people to give sessions. This was the case, when Gerson asked Ludovico to show him how <a href="https://qwik.dev/"  target="_blank" >Qwik</a> works!</p>
<p>Ludovico obliged to the request and showed us a small example of a quik application, explaining its Server-Side-Rendering approach (resumability). I didn&rsquo;t know much about SSR, but I will try to learn it more after getting a glimpse of what it can do!</p>
<p><strong>1-on-1 for dummies</strong> - <a href="https://www.linkedin.com/in/maddalena-germinario/"  target="_blank" >Maddalena Germinario</a></p>
<p>Maddalena had her first-ever round of 1-to-1 sessions with her team after becoming tech lead&hellip; and she asked for our feedback on how to improve! The group had a discussion on how to have a great 1-to-1s, from the perspective of both the team lead and the members.</p>
<p>We talked about trust, career development, feedback, psychology, tools and methods, and it was a great source of information about 1-to-1s and how to treat people at work in general (and how to manage 1-to-1 sessions as a manager without getting crazy afterwards).</p>
<p><strong>Intro to Hono and Deploy to prod on Kubernello</strong> - <a href="https://www.linkedin.com/in/ludusrusso/"  target="_blank" >Ludovico Russo</a>, <a href="https://www.linkedin.com/in/federicogandellini/"  target="_blank" >Federico Gandellini</a></p>
<p>The final session of Polenta &amp; Deploy witnessed a historic moment as Ludovico and Federico executed the first ever production deployment during a Polenta&amp;Deploy event!</p>
<p>Federico wanted to create a small application using <a href="https://hono.dev/"  target="_blank" >Hono</a>, a framework for developing backend APIs and websites in nodejs. Together with Ludovico, they developed a small application and then deployed it on Ludovico&rsquo;s kubernello.</p>
<p>Watching them develop and deploy a small page in 30 minutes was impressive, and it left me inspired to create my own small kubernello setup!
I won&rsquo;t share the final url (just in case someone decides to DDoS kubernello 😅), but trust me, it was a great session.</p>
<h2 id="the-end">The End</h2>
<p>After the unconference ended, we went to a restaurant in the mountains near Pinzolo and waited for the others.</p>
<p>I made a good choice staying at the hotel for the unconference&hellip; the <em>small</em> hike the other group started in the morning turned out to be a 3/4 hour-long adventure in the snow (sans snowshoes this time) and the group came back late, tired, and wet!</p>
<p>We ate the last polenta, and as the rain started to fall and replace the snow around us, it reminded us it was time to go home.</p>
<p>This Polenta &amp; Deploy was great. I already had my unconference initiation at <a href="https://marcobacis.com/blog/socrates-2023/"  target="_blank" >SoCraTes</a>, and I firmly believe this format is way better than any standard conference.</p>
<p>An unconference offers a safe, intimate space where everyone can share their opinions, provide feedback, and support others. Being surrounded by the Trentino mountains was the cherry on top for me. While I&rsquo;m not particularly happy to hike on them (too hard!), I do love being in the mountains and spending time with like-minded people, so this was an incredible opportunity.</p>
<p>Thanks again, and see you next time!</p>

        ]]></content:encoded></item><item><title>My Experience at the Italian Agile Days 2023</title><link>https://marcobacis.com/blog/2023-italian-agile-days/</link><pubDate>Tue, 16 Jan 2024 00:00:00 +0000</pubDate><guid>https://marcobacis.com/blog/2023-italian-agile-days/</guid><description>&lt;p>Hi 👋 and welcome to a new post!&lt;/p>
&lt;p>Today I’m writing a summary of my experience at the Italian Agile Days 2023.&lt;/p>
&lt;p>I already wrote about the 2022 edition &lt;a href="https://marcobacis.com/blog/2022-italian-agile-days/" target="_blank" >here&lt;/a> and, just like last time, I’m writing this summary 2 months after the event…but let’s not worry about this short delay.&lt;/p>
&lt;p>This year, the event was organised at the Politecnico di Milano campus. I graduated there about 4 years ago, so it was a great occasion to return there! I got to see how the campus changed, and I met some old friends (at &lt;a href="https://necst.it/" target="_blank" >NECSTLab&lt;/a>) who stayed for their PhD.&lt;/p></description><media:content url="https://marcobacis.com/blog/2023-italian-agile-days/cover_hu6401328075211795705.jpg" width="480" height="360" medium="image" type="image/jpeg"><media:thumbnail url="https://marcobacis.com/blog/2023-italian-agile-days/cover_hu6401328075211795705.jpg" width="480" height="360"/></media:content><content:encoded><![CDATA[
        <img src="https://marcobacis.com/blog/2023-italian-agile-days/cover_hu6401328075211795705.jpg" title="%!s(<nil>)" alt="%!s(<nil>)"/>
          <p>Hi 👋 and welcome to a new post!</p>
<p>Today I’m writing a summary of my experience at the Italian Agile Days 2023.</p>
<p>I already wrote about the 2022 edition <a href="https://marcobacis.com/blog/2022-italian-agile-days/"  target="_blank" >here</a> and, just like last time, I’m writing this summary 2 months after the event…but let’s not worry about this short delay.</p>
<p>This year, the event was organised at the Politecnico di Milano campus. I graduated there about 4 years ago, so it was a great occasion to return there! I got to see how the campus changed, and I met some old friends (at <a href="https://necst.it/"  target="_blank" >NECSTLab</a>) who stayed for their PhD.</p>
<p>Let’s start 💪</p>
<h2 id="first-day---unconference">First Day - Unconference</h2>
<p>The first day was dedicated to the unconference. An unconference (also called open space) is an event in which the agenda and the sessions are decided by the participants at the beginning of the day.</p>
<p>This was the second unconference I ever attended (after SoCraTes, which I described <a href="https://marcobacis.com/blog/socrates-2023/"  target="_blank" >here</a>), and I must admit that I’m starting to get addicted! They are a great way to get inspired and they cover a lot of themes and topics (less $$$ spent attending distinct conferences 😜).</p>
<p><div class="image imgB-dde4a2e377d3daafec7ee6e25a7a6c19-GIP">
  <figure>
    <picture>
      <source type="image/webp" srcset="https://marcobacis.com/blog/2023-italian-agile-days/iad_unconference_marketplace_hu2888921477198727228.webp 320w, https://marcobacis.com/blog/2023-italian-agile-days/iad_unconference_marketplace_hu13258793740319729658.webp 640w, https://marcobacis.com/blog/2023-italian-agile-days/iad_unconference_marketplace_hu11145593759551761932.webp 960w, https://marcobacis.com/blog/2023-italian-agile-days/iad_unconference_marketplace_hu16566203894980215733.webp 1280w, https://marcobacis.com/blog/2023-italian-agile-days/iad_unconference_marketplace_hu14631141046809813042.webp 1600w, https://marcobacis.com/blog/2023-italian-agile-days/iad_unconference_marketplace_hu6652396031451163128.webp 1920w" sizes="(min-width: 1024px) 100vw, 50vw" />
      <source type="image/jpeg" srcset="https://marcobacis.com/blog/2023-italian-agile-days/iad_unconference_marketplace_hu7067781978463993281.jpg 320w, https://marcobacis.com/blog/2023-italian-agile-days/iad_unconference_marketplace_hu13513655080515876344.jpg 640w, https://marcobacis.com/blog/2023-italian-agile-days/iad_unconference_marketplace_hu3381284509564823743.jpg 960w, https://marcobacis.com/blog/2023-italian-agile-days/iad_unconference_marketplace_hu15217723812080680695.jpg 1280w, https://marcobacis.com/blog/2023-italian-agile-days/iad_unconference_marketplace_hu8631787235409901297.jpg 1600w, https://marcobacis.com/blog/2023-italian-agile-days/iad_unconference_marketplace_hu17556945184966818923.jpg 1920w" sizes="(min-width: 1024px) 100vw, 50vw" />
      <img class="w-full h-auto animate-fade" src="/blog/2023-italian-agile-days/iad_unconference_marketplace_hu13513655080515876344.jpg" width="2208"
        height="1242" alt="" title="" loading="lazy" />
    </picture>
</div>




<figcaption class="caption">Friday’s unconference agenda</figcaption>

</figure></p>
<p>Here is a summary of the sessions I was able to attend.</p>
<p><em>A little disclaimer: I didn’t take many notes (and I’m writing these summaries after 2 months 😅), so even remembering the title is enough… you’ll notice during which session I took notes and which I did not 😂.</em></p>
<p><em>In addition, I skipped some sessions and just went along with some other groups during the day. That’s the best part of unconferences: conversations just happen, and there are no limits to the discussions outside of the event itself!!</em></p>
<h3 id="unicorns---evolving-systems-where-to-find-them---alberto-acerbishttpswwwlinkedincominaacerbis">Unicorns - Evolving Systems, where to find them? - <a href="https://www.linkedin.com/in/aacerbis/"  target="_blank" >Alberto Acerbis</a></h3>
<p>In his session, Alberto gave an overview of how we can tackle the complexity of software design using Evolutionary Architectures.</p>
<p>When designing a system, we try to find a model that “fits” the problem we are trying to solve. However, the real world is complex (and sometimes chaotic), while software developers try to fit it into a clean, deterministic and simple model.</p>
<p>The guiding principle of Evolutionary Architecture is to perform guided, incremental, non-breaking changes across multiple dimensions (e.g. application and operations). Alberto then gave some links and concepts related to evolutionary architectures, such as:</p>
<ul>
<li>Modularity (low coupling and high cohesion)</li>
<li>Using fitness functions to guide the evolution of the architecture</li>
<li>The tradeoff between DRY and WET software (is it always better to reduce duplication?)</li>
<li>Using different tools for different problems (no silver bullet)</li>
<li>Least Responsible Moment (delaying decisions when you have enough information)</li>
<li>“Laws” such as <em>Postel’s</em> and <em>Conway’s</em></li>
</ul>
<p>After his session, I had a lot to process (I just highlighted some of the arguments he explained), and it was a great overview of software architecture principles!</p>
<h3 id="how-to-stop-writing-unit-tests-and-be-happy---franco-lombardohttpswwwlinkedincominfrancolombardo">How to stop writing unit tests and be happy - <a href="https://www.linkedin.com/in/francolombardo/"  target="_blank" >Franco Lombardo</a></h3>
<p>Franco gave a session on how ATDD (Acceptance Test-Driven Development) can help make us happier by writing easier tests.</p>
<p>ATDD is a flavour of TDD in which we develop a feature by starting with acceptance tests instead of standard unit tests. <em><strong>Acceptance tests</strong></em> are tests written from the perspective of the user and with the language used by the user/business. They are useful because when the test is green, then the user/business (and us) is happy and the functionality is implemented as specified (at least that’s how it should be).</p>
<p>In his session, Franco showed us that doing ATDD is easier than ever. He argued that testing with the real storage (db engine) is easy if the system is designed simply (e.g. without triggers, stored procedures or other complex stuff) and that persistence is not an “implementation detail” after all.</p>
<p>ATDD is not for everyone and every project, and he showed us the cases in which it shouldn’t be used (e.g., inexperienced developers, greenfield projects, UI-heavy applications, or projects too small or too big). In general, ATDD is a tool we can leverage in addition to the others.</p>
<p>I usually develop my tests using a similar approach (from the API controller to the DB, either in memory or in a small container) and find it useful, so Franco’s session confirmed my approach 👍 (even if there were a lot of discussions afterwards).</p>
<h3 id="legacy-code-theory-and-practice---andrea-franciahttpswwwlinkedincominandreafrancia">Legacy Code, theory and practice - <a href="https://www.linkedin.com/in/andreafrancia/"  target="_blank" >Andrea Francia</a></h3>
<p>Andrea gave a lecture (a real one, with a blackboard and in a university campus!) on how to work with legacy code. In the end, he gave a very straightforward summary of the “Working Effectively with Legacy Code” book!</p>
<p>First, he started with some definitions of legacy code, such as:</p>
<ul>
<li>Code without tests, or badly written tests (e.g. fragile, driven by the underlying implementation)</li>
<li>Code we are afraid to touch and modify</li>
</ul>
<p>After defining the enemy, Andrea showed us how to fight it. The way to do it is, of course, to add tests. But how do you add tests when the code doesn’t help (cannot refactor without test, cannot test without refactor)? We can use some techniques such as <strong>characterisation tests</strong>.</p>
<p>Basically, to test a legacy system we treat the system as a black bock driven by its I/Os (disk, DBs, network, external APIs etc..), and drive the I/O with tests to cover the piece of code we need to modify for the feature we have to develop. After covering the legacy code with enough tests, we can finally refactor it and start to develop the new feature.</p>
<p>Andrea told us about some cases that happened to him, such as testing using the log outputs to check that the system was behaving correctly. He also debunked the myth that we cannot use the debugger while doing TDD…with legacy code, everything is possible (and accepted).</p>
<p>Of the entire session I still remember a phase Andrea said: “Tests are like bets”. I think this sums up pretty well how I feel about tests and TDD in general. Every time I write a test, I’m betting that the system will behave in a certain way, and then correct my assumption (when doing characterisation tests) or the underlying implementation (during normal TDD) based on the test output.</p>
<h3 id="tdd-training-for-devs-working-full-time---matteo-vaccarihttpswwwlinkedincominmatteovaccari">TDD Training for devs working full time - <a href="https://www.linkedin.com/in/matteovaccari/"  target="_blank" >Matteo Vaccari</a></h3>
<p>Matteo is a Technical Principal at ToughtWorks, and in his session, he presented a problem he currently has: how do I train developers in how to use TDD, if they are already working full-time on different projects? I must admit I arrived late at this session, but just by watching the drawings there were a lot of ideas 😜</p>
<h3 id="pair-programming-discussion---angelo-ceccatohttpswwwlinkedincominangeloceccato">Pair Programming discussion - <a href="https://www.linkedin.com/in/angeloceccato/"  target="_blank" >Angelo Ceccato</a></h3>
<p>Angelo proposed an open discussion about pair programming. In a small group, we discussed what pair programming means for us, if and how we are using it at work and what are the advantages, disadvantages and common issues with it. I don’t pair often (and never in the “canonical” way at least), and hearing the stories of other developers was interesting, from people who do it every day and for more than half of their workday, to others who are sceptic about some of its implementation, and to others (like me) who never did it apart from emergencies and workshops.</p>
<h2 id="second-day---conference">Second Day - Conference</h2>
<p>The second day was a standard conference, held in a single Polimi building (n. 3 to be precise).</p>
<p>After arriving at the main campus and finding the entrance (on Saturday all secondary entrances are closed it seems 🤔), it was time to grab the goodies bag, buy the conference T-shirt and finally attend the main event!</p>
<p>Here is the usual (incomplete) list of talks I watched (and some notes when I took them).</p>
<h3 id="e-non-ci-indurre-in-tentazione-ma-liberaci-dal-bug---marco-fracassihttpswwwlinkedincominmarco-fracassi">E non ci indurre in tentazione, ma liberaci dal bug - <a href="https://www.linkedin.com/in/marco-fracassi/"  target="_blank" >Marco Fracassi</a></h3>
<p>In his talk, Marco explained how emergent design can help keep a codebase clean, maintainable and close to the domain of the business.</p>
<p>He started with a definition of emergent design and its advantages (e.g. non-speculative, working in small steps, refactoring and simple design), then he went on showing how legacy code has little to none of that!!</p>
<p>Most legacy code contains recurrent (anti)patterns that push it far away from the domain:</p>
<ul>
<li>Layered architecture (code divided by layer instead of features)</li>
<li>Anaemic objects</li>
<li>Big Services doing everything</li>
<li>Dependency Injection with a lot of scattered containers (10+ parameters constructors anyone?)</li>
<li>Behaviour separate from the data (which is caused by all the above)</li>
</ul>
<p>In the long run, these issues affect most legacy systems and lead to unmaintainable code. To make it worse, the problem is not caused by the framework or language (and we love so much to blame the language!).</p>
<p>To solve these issues, Marco proposed some solutions, such as:</p>
<ul>
<li>Introducing repositories to separate domain and persistence</li>
<li>Extracting (domain-based) use cases from big services, to separate responsibilities and make a set of smaller, cleaner functionalities</li>
<li>Bringing data and behaviour closed by using domain objects (again, bringing code away from big services)</li>
<li>Splitting read and write procedures (usually removing useless use cases, most of all in the read part)</li>
<li>Writing tests and add coverage (remembering that coverage itself is not fundamental, but tests can act as a “parachute”)</li>
<li>“contamination”, through pair/mob programming and shared learning</li>
</ul>
<p>The main takeaway from his talk is that the design can emerge if we work in small steps, keeping the domain as central in the application and bringing data and behaviour close together (as in DDD).</p>
<p>Marco just started his YouTube channel <a href="https://www.youtube.com/@ImprovingCode"  target="_blank" >ImprovingCode</a> (in Italian) in which he talks about these (and other) topic, check it out!!</p>
<h3 id="bdd-molto-più-che-testing---fabio-cocchihttpswwwlinkedincominfabiococchi">BDD: Molto più che testing - <a href="https://www.linkedin.com/in/fabiococchi/"  target="_blank" >Fabio Cocchi</a></h3>
<p>Gathering requirements for a feature or a product is always difficult. We can write all the specifications we want, but then, as developers, we are left alone to implement them.</p>
<p>BDD (Behavior-Driven Development) is an agile methodology that enables customers and developers to collaborate on the requirements process. It involves writing a verifiable specification that can be used as acceptance criteria.</p>
<p>Fabio introduced us to this world and its main principles and ingredients. In particular, he described the process of using <strong>behaviours</strong> to model the system requirements and how it helps in delivering value to the business more quickly and with fewer iterations. By writing acceptance criteria using a shared language, developers and customers can communicate effectively and understand the domain together, resulting in higher quality and faster delivery.</p>
<h3 id="tdd-e-il-mito-del-100-code-coverage---gianni-bombellihttpswwwlinkedincomingianni-bombelli-manuela-munarettohttpswwwlinkedincominmanuelamunaretto">TDD e il mito del 100% code coverage - <a href="https://www.linkedin.com/in/gianni-bombelli/"  target="_blank" >Gianni Bombelli</a>, <a href="https://www.linkedin.com/in/manuelamunaretto/"  target="_blank" >Manuela Munaretto</a></h3>
<p>Gianni and Manuela staged a great theatrical show, in which two developers discuss a bug they found in their team codebase.</p>
<p>The twist is that the buggy code has 100% test coverage! How is it possible?</p>
<p>During their session, Gianni and Manuela showed that code coverage isn’t the best metric to follow when writing tests, and that it’s more important to write proper tests (asserting the behaviour of the system, and not only blinding covering lines…).
I didn’t take any notes because I couldn’t stop laughing during the session 😂 it was great, and in the end, they were able to find and fix the bug (and then they lived happily ever after).</p>
<h3 id="just-commit-to-master-please---how-to-actually-implement-ci---daniele-scilliahttpswwwlinkedincomindaniele-scillia">Just Commit to master, please - How to actually implement CI - <a href="https://www.linkedin.com/in/daniele-scillia/"  target="_blank" >Daniele Scillia</a></h3>
<p>Daniele showed <em><strong>why</strong></em> and <em><strong>how</strong></em> to implement Continuous Integration the right way, using Trunk-Based Development. I like how he compared the usual pull-request model with trunk-based development and why they have different use cases (open source software the first, usual product development the latter).</p>
<p>I didn’t take notes, so I’ll just give you a link to Daniele’s <a href="https://danthedev.carrd.co/"  target="_blank" >website</a>.</p>
<p>I also highly recommend his newsletter, <a href="https://learnagilepractices.substack.com/"  target="_blank" >Learn Agile Practices</a>, in which he explains agile practices (technical and not),  each week. I’ve been following him since the beginning of 2023, and every new post was great 👍.</p>
<h3 id="building-a-culture-of-sw-craftsmanship---michele-brissonihttpswwwlinkedincominmichelebrissoni">Building a culture of SW Craftsmanship - <a href="https://www.linkedin.com/in/michelebrissoni/"  target="_blank" >Michele Brissoni</a></h3>
<p>In his talk, Michele presented the <a href="https://swcraftsmanshipdojo.com/"  target="_blank" >SW Craftmanship Dojo</a>, a platform in which he teaches the principles and techniques of software craftmanship with a holistic approach.</p>
<p>The dojo trains students by using techniques taken from the world of martial arts (of which Michele himself is a very expert practitioner). Students learn eXtreme Programming concepts (all the *DDs out there), DevOps and Infrastructure/SRE stuff and also product-related topics, making theme all-around professional software craftsmen.</p>
<p>His talk was really interesting and showed that I still have A LOT to learn in order to be a real  professional 😅</p>
<h3 id="in-between-talks">In between talks…</h3>
<p>While taking a break, I decided to not follow any talk and just roam around the conference.</p>
<p>While wandering around my old university halls, I stumbled upon some people from <a href="https://qmates.tech/"  target="_blank" >QMates</a> (<a href="https://www.linkedin.com/company/qmates/"  target="_blank" >linkedin</a>) who just took an empty lecture room as hostage and started doing the <a href="https://github.com/sandromancuso/Bank-kata"  target="_blank" >bank kata</a> on the small desks used by students.</p>
<p>It was a great moment, as I watched a mob discussing the proper way to develop and test REST endpoints for a fake bank account service in a university room… it couldn’t get better 😁</p>
<p>These are exactly the reasons why I prefer in-presence conferences to their online version…</p>
<h3 id="come-funziona-il-cevello-di-un-programmatore-quando-impara-e-affronta-nuovi-problemi---pietro-roversihttpswwwlinkedincominpietro-roversi-61070527-slideshttpswwwslidesharenetpietroroversi3come-funziona-il-cervello-di-un-programmatore-quando-impara-e-affronta-nuovi-problemipdf">Come funziona il cevello di un programmatore quando impara e affronta nuovi problemi? - <a href="https://www.linkedin.com/in/pietro-roversi-61070527/"  target="_blank" >Pietro Roversi</a> (<a href="https://www.slideshare.net/PietroRoversi3/come-funziona-il-cervello-di-un-programmatore-quando-impara-e-affronta-nuovi-problemipdf"  target="_blank" >slides</a>)</h3>
<p>How does our brain work, and how can we exploit it to work with code better?</p>
<p>Pietro introduced us to the magical world of our brain. He talked about memory, cognitive load, knowledge and flow, and how everything impacts our work as developers.</p>
<p>For example, short-term and working memory are essential to keep a flow state, and we can improve our flow by learning the syntax and some of the documentation of our languages and frameworks (which we never do 😂). This also allows to reduce interruptions (google searches which become a rabbit-hole of surfing the web in various ways) .</p>
<p>Another interesting fact is that working memory is involved in a process called chunking (dividing and storing information in chunks), and with more experience comes better chunking… so, reading more code (and having more experience) allows senior developers to remember it better than the juniors 🤯.</p>
<p>Pietro’s talk was full of these insights, and I enjoyed the explanation behind how our brain works!</p>
<h3 id="navigando-nel-mondo-del-software-tra-modelli-e-realtà---ferdinando-santacrocehttpswwwlinkedincominferdinandosantacroce-marco-massarottohttpswwwlinkedincominmassama">Navigando nel mondo del software, tra modelli e realtà - <a href="https://www.linkedin.com/in/ferdinandosantacroce/"  target="_blank" >Ferdinando Santacroce</a>, <a href="https://www.linkedin.com/in/massama/"  target="_blank" >Marco Massarotto</a></h3>
<p>The last talk I attended was given by Marco and Ferdinando. Together, they explored the difference between models and the reality of software development.</p>
<p>In their talk they linked various arguments and topics (from User Stories to technical debt and the definition of Ubiquitous Language in DDD) to highlight that we operate in a world of approximations.</p>
<p>I enjoyed this session (as I did with Ferdinando’s session <a href="https://vimeo.com/768881541"  target="_blank" >last year</a>) because it reached full circle with the first session I attended the day before (given by Alberto Acerbis, see above) in showing the importance of modelling and facing approximations in our job as developers.</p>
<h2 id="conclusions">Conclusions</h2>
<p>The conference was great!</p>
<p>Last year was my first time and I had some trouble meeting people and just enjoying the event.</p>
<p>This time, after participating in the community a bit more, I was able to attend the conference with a different mindset and just enjoy it.</p>
<p>The fact that the conference was held on the Politecnico campus was the cherry on top: I was finally able to visit the campus again after 4 years and sink into the memories (both good…and bad 😅) of my university years.</p>
<p>I can’t wait to see what next year brings in terms of events, and to keep learning!</p>
<p>See you next time!</p>

        ]]></content:encoded></item><item><title>My Experience at SoCraTes 2023</title><link>https://marcobacis.com/blog/socrates-2023/</link><pubDate>Fri, 03 Nov 2023 21:00:00 +0100</pubDate><guid>https://marcobacis.com/blog/socrates-2023/</guid><description>&lt;p>Hi! 👋 Welcome to a new post.&lt;/p>
&lt;p>On October 19-21, I attended the SoCraTes (un)conference in Rimini. With over 90 people, we gathered to talk about software crafting, testing, and all related (and unrelated) stuff 😛.&lt;/p>
&lt;p>The event was fantastic! I met a lot of new people, gained insights into my current and future learning, and had some interesting (and crazy) discussions (such as discovering the niche of custom keyboards and firmware 🤩)!!!&lt;/p>
&lt;p>In this post, I&amp;rsquo;m going to give a brief summary of what an unconference is and the sessions I attended during the event.&lt;/p></description><media:content url="https://marcobacis.com/blog/socrates-2023/cover_hu11313135545970800347.jpg" width="408" height="408" medium="image" type="image/jpeg"><media:thumbnail url="https://marcobacis.com/blog/socrates-2023/cover_hu11313135545970800347.jpg" width="408" height="408"/></media:content><content:encoded><![CDATA[
        <img src="https://marcobacis.com/blog/socrates-2023/cover_hu11313135545970800347.jpg" title="Socrates Logo © [SoCraTes-IT](https://www.socrates-conference.it/)" alt="Socrates Logo © [SoCraTes-IT](https://www.socrates-conference.it/)"/>
          <p>Hi! 👋 Welcome to a new post.</p>
<p>On October 19-21, I attended the SoCraTes (un)conference in Rimini. With over 90 people, we gathered to talk about software crafting, testing, and all related (and unrelated) stuff 😛.</p>
<p>The event was fantastic! I met a lot of new people, gained insights into my current and future learning, and had some interesting (and crazy) discussions (such as discovering the niche of custom keyboards and firmware 🤩)!!!</p>
<p>In this post, I&rsquo;m going to give a brief summary of what an unconference is and the sessions I attended during the event.</p>
<p>Enjoy!</p>
<h2 id="what-is-an-open-space">What is an Open Space?</h2>
<p>SoCraTes is a unique event because of its interesting format, called Open Space (or Unconference).</p>
<p>In a standard conference, everything is decided up-front: there is a call-for-papers, speakers and the agenda are decided beforehand, there are frontal sessions and workshops, etc. Basically, the attendees just need to come and watch what&rsquo;s offered by the conference organizing committee.</p>
<p>On the contrary, in an Open Space, the format, agenda, and topics discussed are decided by the participants during the event itself. This choice comes from the observation that, during a conference, the most inspiring and interesting stuff happens during coffee breaks and in the common areas. So why don&rsquo;t we transform the entire event into a big coffee break?</p>
<p>On every day of the Open Space, the participants gather to propose and decide the daily agenda: everyone can propose a talk, workshop, discussion, or any other type of activity (even a walking discussion on the beach 😎 or a party game). After the proposals, it&rsquo;s time for the <strong>marketplace</strong>: everyone can ask the session organizer to move the session (to a different time and location) or to change/expand the topic. The important thing is that only the one who proposed the session can change it!</p>
<p>After the marketplace has ended and the agenda is ready, the unconference can start. During the event, there is only one rule to follow, called the &ldquo;rule of two feet&rdquo;:</p>
<blockquote>
<p>If you are not contributing or adding value to the session, you can move elsewhere freely.</p>
</blockquote>
<p>This rule is not confined to the pre-defined sessions. Participants can move between sessions, stay in common areas, or look for other people to start impromptu activities! That&rsquo;s the beauty of the open space format.</p>
<p>Given that they can freely move during the event, participants usually divide into two categories:</p>
<ul>
<li>Butterflies: they like to move a lot and cross-pollinate the discussions.</li>
<li>Bumblebees: they stay in the same room for the entire duration of the session, bringing stability and continuity to the discussions.</li>
</ul>
<p>Also, the rule of two feet generates four principles:</p>
<ul>
<li>Whoever comes is the right people.</li>
<li>Whenever it starts is the right time.</li>
<li>Whatever happens is the only thing that could happen.</li>
<li>When it&rsquo;s over, it&rsquo;s over.</li>
</ul>
<p>The rule of two feet and the four principles above allow the participants to express themselves in many ways and encourage collaboration and open discussions throughout the event. That&rsquo;s what brought me to attend it!</p>
<h2 id="my-experience-at-socrates-it-2023">My experience at SoCraTes-IT 2023</h2>
<p>Here&rsquo;s a brief summary of my experience at SoCraTes 2023. I didn&rsquo;t take many notes and pictures, so most of the descriptions below might be incomplete or plain wrong. This is more of a journaling exercise for me.</p>
<p>Given this disclaimer, if you find any errors, don&rsquo;t hesitate to contact me (or open an issue/PR on my website <a href="https://github.com/marcobacis/marcobacis.github.io"  target="_blank" >repository</a> on GitHub 😛).</p>
<p>Enjoy!</p>
<h3 id="thursday">Thursday</h3>
<p>The first day was just for networking and getting to know the other participants. I arrived at the hotel in the afternoon, and then we had a happy hour, dinner, and a brief &ldquo;ice-breaker&rdquo; game.</p>
<p>We divided into groups, and each group had to introduce itself with a given description. My group had to decide if &ldquo;casual Friday&rdquo; was still a thing in the 2020s. We named our group &ldquo;Eat My Shorts&rdquo; and gave a short presentation on it. However, there was no interaction or any &ldquo;theatrical&rdquo; performance, and only one of us spoke, while other groups put on a show and moved around a lot. A reminder for next time: have more interaction between group members (try to talk 😅) and make the presentation funnier!!</p>
<p>After the ice breaker, I went to my room early because I hadn&rsquo;t been feeling well since the morning and needed to recharge for the next days.</p>
<h3 id="friday">Friday</h3>
<p>Friday was the first day of the Unconference!</p>
<p>We met in the hotel hall to have the first “marketplace”. Everyone interested/inspired attached a post-it with his/her session proposal. Then, we decided the rooms and time for each session.</p>
<table>
  <thead>
      <tr>
          <th></th>
          <th></th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td><div class="image imgB-c4b974730e7067fa4ef67019190b588a-GIP">
  <figure>
    <picture>
      <source type="image/webp" srcset="https://marcobacis.com/blog/socrates-2023/day1panel1_hu15015101184856268063.webp 320w, https://marcobacis.com/blog/socrates-2023/day1panel1_hu14277336183309677295.webp 640w, https://marcobacis.com/blog/socrates-2023/day1panel1_hu7763289998382729388.webp 960w, https://marcobacis.com/blog/socrates-2023/day1panel1_hu2701294199274510088.webp 1280w, https://marcobacis.com/blog/socrates-2023/day1panel1_hu10801136789866808652.webp 1600w, https://marcobacis.com/blog/socrates-2023/day1panel1_hu13593409528381289552.webp 1920w" sizes="(min-width: 1024px) 100vw, 50vw" />
      <source type="image/jpeg" srcset="https://marcobacis.com/blog/socrates-2023/day1panel1_hu14028517498335225248.jpg 320w, https://marcobacis.com/blog/socrates-2023/day1panel1_hu11939916375529181813.jpg 640w, https://marcobacis.com/blog/socrates-2023/day1panel1_hu4901049681547636137.jpg 960w, https://marcobacis.com/blog/socrates-2023/day1panel1_hu6308036467696928554.jpg 1280w, https://marcobacis.com/blog/socrates-2023/day1panel1_hu10651513473937823292.jpg 1600w, https://marcobacis.com/blog/socrates-2023/day1panel1_hu5529774821604045670.jpg 1920w" sizes="(min-width: 1024px) 100vw, 50vw" />
      <img class="w-full h-auto animate-fade" src="/blog/socrates-2023/day1panel1_hu11939916375529181813.jpg" width="3024"
        height="4032" alt="SoCraTes Day 1" title="SoCraTes Day 1" loading="lazy" />
    </picture>
</div>




</figure></td>
          <td><div class="image imgB-5714f447421f2df65addc91b0793af3a-GIP">
  <figure>
    <picture>
      <source type="image/webp" srcset="https://marcobacis.com/blog/socrates-2023/day1panel2_hu7150365424825438683.webp 320w, https://marcobacis.com/blog/socrates-2023/day1panel2_hu8753090358500507938.webp 640w, https://marcobacis.com/blog/socrates-2023/day1panel2_hu6021265994491525017.webp 960w, https://marcobacis.com/blog/socrates-2023/day1panel2_hu9013898587870033214.webp 1280w, https://marcobacis.com/blog/socrates-2023/day1panel2_hu5239789462658488151.webp 1600w, https://marcobacis.com/blog/socrates-2023/day1panel2_hu5172191364101216599.webp 1920w" sizes="(min-width: 1024px) 100vw, 50vw" />
      <source type="image/jpeg" srcset="https://marcobacis.com/blog/socrates-2023/day1panel2_hu3744550528172602546.jpg 320w, https://marcobacis.com/blog/socrates-2023/day1panel2_hu17779988343145460972.jpg 640w, https://marcobacis.com/blog/socrates-2023/day1panel2_hu11118117855172962794.jpg 960w, https://marcobacis.com/blog/socrates-2023/day1panel2_hu3139020324539261805.jpg 1280w, https://marcobacis.com/blog/socrates-2023/day1panel2_hu9158228934581036238.jpg 1600w, https://marcobacis.com/blog/socrates-2023/day1panel2_hu8794734420670165095.jpg 1920w" sizes="(min-width: 1024px) 100vw, 50vw" />
      <img class="w-full h-auto animate-fade" src="/blog/socrates-2023/day1panel2_hu17779988343145460972.jpg" width="3024"
        height="4032" alt="SoCraTes Day 1" title="SoCraTes Day 1" loading="lazy" />
    </picture>
</div>




</figure></td>
      </tr>
  </tbody>
</table>
<p>Here’s a brief description on the sessions I was able to participate (even for a few minutes):</p>
<p><strong>Game AI and Montecarlo Tree Search - <a href="https://www.linkedin.com/in/matteovaccari/"  target="_blank" >Matteo Vaccari</a></strong></p>
<p>In this session, Matteo taught us what a Monte Carlo search is and how it is useful for searching in very large decision trees. A perfect example of this was the game &ldquo;Commands&amp;Colors&rdquo; with some parts of the game having a million branch factor!</p>
<p>This was a preliminary test for his talk, which he gave a few days later at Codemotion. I wasn&rsquo;t able to see his entire session at SoCraTes, but I watched his talk at Codemotion and it was great!</p>
<p>For more information (and slides/code), visit <a href="https://matteo.vaccari.name/"  target="_blank" >Matteo&rsquo;s website</a>.</p>
<p><strong>The Programmer’s Brain - <a href="https://www.linkedin.com/in/mrctst/"  target="_blank" >Marco Testa</a></strong></p>
<p>In this session, Marco presented what he learned reading the book “<a href="https://www.manning.com/books/the-programmers-brain"  target="_blank" >The Programmer’s Brain</a>” by Felienne Hermans.</p>
<p>The main concept we discussed was <strong>cognitive load</strong> and ways in which it affects software developers. The book provides many concepts and ways to reduce this cognitive load and make the code we develop easier to understand and remember. Many of the techniques have already been discussed in other books (e.g. clean code), but here they were related to cognitive load and all of its aspects.</p>
<p>The session was really interesting. Having attended a course on memory techniques some years ago I already knew some of the concepts presented, although not applied to software development.</p>
<p><strong>Stop fighting useless battles: automate code style, architecture compliance and refactoring - <a href="https://www.linkedin.com/in/robfrank/"  target="_blank" >Roberto Franchini</a></strong></p>
<p>Roberto gave this talk at the <a href="https://www.agilemovement.it/workingsoftware/"  target="_blank" >Working Software Conference</a> in June. I didn&rsquo;t see it at that time, but fortunately, he gave it again at SoCraTes! His talk was about ways to automate boring tasks that are quite important to keep a codebase clean among team members.</p>
<p>In particular, he presented:</p>
<ul>
<li><a href="https://pre-commit.com/"  target="_blank" >pre-commit</a>: a tool to boost commit hooks and CI pipelines, with various tasks and plugins from the community. He uses it to check certain rules, such as passwords and keys, fixing line endings, and more.</li>
<li><a href="https://www.archunit.org/"  target="_blank" >ArchUnit</a>: a tool to unit-test your architecture. It can be used to enforce separation between modules, check that the code doesn&rsquo;t import certain packages, and generally standardize and test the code architecture.</li>
<li><a href="https://docs.openrewrite.org/"  target="_blank" >OpenRewrite</a>: allows for large-scale code refactoring, such as framework/API migrations, code cleanup, and other community-driven code transformations.</li>
</ul>
<p>I didn&rsquo;t know about any of these tools, so it was a very inspiring talk!</p>
<p><strong>Discussion on Trunk-Based Development - <a href="https://www.linkedin.com/in/fabio-fortini/"  target="_blank" >Fabio Fortini</a></strong></p>
<p>After lunch, while everyone was feeling sleepy, Fabio ignited our fighting spirit by presenting a controversial argument: should we use trunk-based development in our projects?</p>
<p>He showed us a presentation he had given to his team in 2021 to convince them of the pros (without having used it before), and then gave his opinion after having done it for a few months.</p>
<p>The discussion was filled with arguments from both parties, and essentially Fabio stopped talking and (unintentionally) handed the stage over to the group.</p>
<p>It was an interesting discussion nonetheless: in the end, trunk-based development can be used as a teaching tool to help the team learn to work with small releases and continuously integrate into the main branch. Afterward, or if the team is already mature enough, small, frequently integrated branches can also be used (and are actually compatible with the trunk-based definition!).</p>
<p><strong>The Training Crafter - To read or not to read? - <a href="https://www.linkedin.com/in/chiarabarbagianni/"  target="_blank" >Chiara Barbagianni</a></strong></p>
<p>The topic of the session was learning. Should we learn by reading or by doing, and can the two worlds work together?</p>
<p>Chiara gave a free-flowing presentation to our small group, starting with a survey and then writing on a whiteboard (and a lot of post-it notes) to decide how to merge the two opposing views.</p>
<p>She divided the board into 4 quadrants along 2 axes:</p>
<ul>
<li>Practice (doing something practical, or reading about it?)</li>
<li>Taste (developing a taste for what you are learning, or doing it just for the money?)</li>
</ul>
<p>At the end, Chiara presented how she&rsquo;s doing it in the <a href="https://handbook.agilelab.it/BookClub.html"  target="_blank" >Agile Lab Book Club</a>: instead of mandating all members to read a given chapter every time, the format is more generic. Every two weeks, the club curators propose a topic: members can explore it in any way (the recommended book, videos, blogs, anything) and post their learnings on a shared board. At the end of the two-week period, they share what they learned in a short training session.</p>
<p>I loved this session! The way it was kept was fantastic, and we were immersed in Chiara&rsquo;s mind throughout the entire duration of the discussion. That&rsquo;s exactly what I expected from an unconference.</p>
<p><div class="image imgB-c9a647c8de673d1d332dd1be22138622-GIP">
  <figure>
    <picture>
      <source type="image/webp" srcset="https://marcobacis.com/blog/socrates-2023/chiara_barbagianni_session_hu13963276661293247569.webp 320w" sizes="(min-width: 1024px) 100vw, 50vw" />
      <source type="image/jpeg" srcset="https://marcobacis.com/blog/socrates-2023/chiara_barbagianni_session_hu10568611772168997724.jpg 320w" sizes="(min-width: 1024px) 100vw, 50vw" />
      <img class="w-full h-auto animate-fade" src="/blog/socrates-2023/chiara_barbagianni_session_hu11080491475861465017.jpg" width="385"
        height="512" alt="The output of the session" title="The output of the session" loading="lazy" />
    </picture>
</div>




<figcaption class="caption">The output of the session</figcaption>

</figure></p>
<p><strong>Monads for the Rest of us (in C#)  - <a href="https://www.linkedin.com/in/arialdomartini/"  target="_blank" >Arialdo Martini</a></strong></p>
<p>Even after studying it at the university, I still find it difficult to understand most functional programming concepts. But thanks to Arialdo, now I can understand it a bit more.</p>
<p>In his session, he started to implement monads (the most difficult concept in FP to me) in plain C#. Starting from function composition, passing through functors and implementing the IO monad, he tried to explain to the folks that we are how functional programming concepts map to an object oriented language.</p>
<p>His session was based on a series of posts <a href="https://arialdomartini.github.io/monads-for-the-rest-of-us"  target="_blank" >on his website</a>, that I will definitely try to follow to learn all there is about monads!</p>
<p><strong>Friday evening special: Oggetti a Teatro” (Objects on Stage) - <a href="https://www.linkedin.com/in/mrctst/"  target="_blank" >Marco Testa</a></strong></p>
<p>Unlike many conferences, the party didn’t finish after dinner. Instead, there were 2 parallel sessions. One was a NIX installation party at the pub, while the other was a high-class evening at the theatre.</p>
<p>Marco wrote and gave life to a set of characters (I still remember the <em>Duke of Client</em>, the <em>Count of Receiver</em>, and <em>Invoker the spy</em>!) that together and with their actions formed the perfect description of the Command Pattern. He basically wrote the script of a design pattern, highlighting the behaviour of the different component and their scope. Also, the story was pretty engaging!</p>
<p>Even if short, the <em>opera</em> was well received by the public, and I think it would be a great way to explain design patterns in a memorable way.</p>
<h3 id="saturday">Saturday</h3>
<p>Second day of Unconference. We started immediately with the session proposals and marketplace, as there was less time than Friday (the event finished at 17).</p>
<table>
  <thead>
      <tr>
          <th></th>
          <th></th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td><div class="image imgB-4df91c72477e1f1b854b0c2f6bc8700a-GIP">
  <figure>
    <picture>
      <source type="image/webp" srcset="https://marcobacis.com/blog/socrates-2023/day2panel1_hu11472852756544574192.webp 320w, https://marcobacis.com/blog/socrates-2023/day2panel1_hu9871326455475483232.webp 640w, https://marcobacis.com/blog/socrates-2023/day2panel1_hu11501172136814715496.webp 960w, https://marcobacis.com/blog/socrates-2023/day2panel1_hu10444245162205605894.webp 1280w, https://marcobacis.com/blog/socrates-2023/day2panel1_hu8076631798664937995.webp 1600w, https://marcobacis.com/blog/socrates-2023/day2panel1_hu4339733369228611844.webp 1920w" sizes="(min-width: 1024px) 100vw, 50vw" />
      <source type="image/jpeg" srcset="https://marcobacis.com/blog/socrates-2023/day2panel1_hu7956237715889961480.jpg 320w, https://marcobacis.com/blog/socrates-2023/day2panel1_hu14977639819714034988.jpg 640w, https://marcobacis.com/blog/socrates-2023/day2panel1_hu10020852800222259695.jpg 960w, https://marcobacis.com/blog/socrates-2023/day2panel1_hu12498221002777291894.jpg 1280w, https://marcobacis.com/blog/socrates-2023/day2panel1_hu7731472889220101613.jpg 1600w, https://marcobacis.com/blog/socrates-2023/day2panel1_hu12722642876645114915.jpg 1920w" sizes="(min-width: 1024px) 100vw, 50vw" />
      <img class="w-full h-auto animate-fade" src="/blog/socrates-2023/day2panel1_hu14977639819714034988.jpg" width="3024"
        height="4032" alt="SoCraTes Day 2" title="SoCraTes Day 2" loading="lazy" />
    </picture>
</div>




</figure></td>
          <td><div class="image imgB-14f5d07737670adb4e0991894078be87-GIP">
  <figure>
    <picture>
      <source type="image/webp" srcset="https://marcobacis.com/blog/socrates-2023/day2panel2_hu9589462917910853555.webp 320w, https://marcobacis.com/blog/socrates-2023/day2panel2_hu13545408588584074511.webp 640w, https://marcobacis.com/blog/socrates-2023/day2panel2_hu12371210005430399342.webp 960w, https://marcobacis.com/blog/socrates-2023/day2panel2_hu11506440064826611107.webp 1280w, https://marcobacis.com/blog/socrates-2023/day2panel2_hu14049678059132940784.webp 1600w, https://marcobacis.com/blog/socrates-2023/day2panel2_hu11958925571860951896.webp 1920w" sizes="(min-width: 1024px) 100vw, 50vw" />
      <source type="image/jpeg" srcset="https://marcobacis.com/blog/socrates-2023/day2panel2_hu14283776226792268285.jpg 320w, https://marcobacis.com/blog/socrates-2023/day2panel2_hu7047438904558724794.jpg 640w, https://marcobacis.com/blog/socrates-2023/day2panel2_hu8782351538503993231.jpg 960w, https://marcobacis.com/blog/socrates-2023/day2panel2_hu8517649933851607809.jpg 1280w, https://marcobacis.com/blog/socrates-2023/day2panel2_hu11933600060503466931.jpg 1600w, https://marcobacis.com/blog/socrates-2023/day2panel2_hu4763828827198322009.jpg 1920w" sizes="(min-width: 1024px) 100vw, 50vw" />
      <img class="w-full h-auto animate-fade" src="/blog/socrates-2023/day2panel2_hu7047438904558724794.jpg" width="3024"
        height="4032" alt="SoCraTes Day 2" title="SoCraTes Day 2" loading="lazy" />
    </picture>
</div>




</figure></td>
      </tr>
  </tbody>
</table>
<p><strong><del>Coping</del>/Coding with Product - <a href="https://www.linkedin.com/in/brando/"  target="_blank" >Alberto Brandolini</a></strong></p>
<p>In this session, Alberto continued the discussion started on friday (which unfortunately I didn’t attend…) on how developers can work together with the product/business side without headaches or creating “dirty” code.</p>
<p>He started by re-defining technical debt (which he deemed a wrong analogy) with its opposite, <strong>Design Integrity</strong>: “how much the current codebase fits its purpose” or how much the code is ready for the next change.</p>
<p>He went on explaining how product side is based on “experiments”, as the roadmap is not as clearly defined as we developers would like the code to be. How can we make the two ends meet? Our work as technical people is to work on “safe bets” from a good design to another good design, without reducing the design integrity.</p>
<p>The group went on a discussion on changes of which I didn’t take note, so writing it here would be useless.</p>
<p>In the end, the core idea is that developers should work together with product to define different “purposes” (either core or not to the business) and isolate these choices in distinct bounded contexts and components, to reduce the possible damage given by continuous product experiments.</p>
<p>This is not a set process, but can evolve based on the product (e.g. a context might get split in multiple services, or multiple services merged because they follow the same purpose…).</p>
<p>Fortunately for us, Alberto wrote a <a href="https://medium.com/@ziobrando/from-technical-debt-to-design-integrity-48e7056b6776"  target="_blank" >post</a> in which he explains these concepts in a much cleaner way than me 😅</p>
<p><strong>Refactoring with CQRS (without events) - <a href="https://www.linkedin.com/in/lucagiovenzana/"  target="_blank" >Luca Giovenzana</a></strong></p>
<p>Luca showed how they refactored the backend for their startup (<a href="https://golee.it/"  target="_blank" >golee</a>) using CQRS, but without using event sourcing as everyone doing CQRS is doing right now. Basically, the team at golee migrated some functionality to the new, greenfield codebase which was used as <em>write model</em>, while keeping the old (legacy) code as <em>read model</em> and as a backup, by writing to it using a hook.</p>
<p>By keeping the system simple (no events and event sourcing) they were able to keep both systems running, without impacting on their ability to extend it and improving performances.</p>
<p>His session was a nice look at how to take tradeoffs, which are essential when running a startup!</p>
<p><strong>Create a Macropad for fun!! - <a href="https://www.linkedin.com/in/gianni-bombelli/"  target="_blank" >Gianni Bombelli</a></strong></p>
<p>During the breaks and dinners on thursday and friday I was introduced to the world of custom keyboards. It’s a world full of crazy people talking about layouts, layers and keys. When Gianni put a post-it named “Create a macropad for FUN!” I couldn’t resist.</p>
<p>In his session, he showed us his “hobby” project, a custom mechanical macropad to help him during training sessions, in which he uses a graphics tablet and might need some ready-to-use shortcuts (e.g. to delete the latest line drawn, to open an application, to use git).</p>
<p>His session was a deep-dive in how to build a custom keyboard, from the PCB up to the customisation with QMK and a bit of C programming. Now I really want a custom macropad!! I’ll wait for the “BomboPad” to enter the market 😛</p>
<p><strong>Orthogonality of TDD, SOLID, FP - <a href="https://www.linkedin.com/in/matteobaglini/"  target="_blank" >Matteo Baglini</a></strong></p>
<p>In his session, Matteo showed us how TDD, SOLID principles and Functional Programming are related. He implemented the password validator kata, doing small steps by following TDD and doing it in a functional way.</p>
<p>I came into the session while it was already started so I lost most of the context. Fortunately, Matteo shared the <a href="https://github.com/matteobaglini/orthogonality-socrates-it-2023"  target="_blank" >repo</a> containing the kata implementation, with every small step of the red-green-refactor process explained in separate commits! A great way to visualize TDD in action.</p>
<p><strong>PKMS/Note Taking - <a href="https://www.linkedin.com/in/jagasantagostino/"  target="_blank" >Jaga Santagostino</a></strong></p>
<p>The final session I attended was an open discussion about Obsidian and Personal Knowledge Management Systems (PKMS) in general.</p>
<p>Jaga showed us the many features in Obsidian and tried to compare it with another famous PKMS application, Notion.</p>
<p>While presenting, other participants asked questions and gave their opinions. For example I learned about another tool, called logseq, which is quite similar to obsidian.</p>
<p>In the end I gave obsidian a try. I actually used it to take notes during the unconference, and to take notes at the Codemotion conference the week later. I now found out how to share my notes with git, so from now on I’ll try to use it instead of Notion! It’s local-first paradigm is very useful when working offline, and the backlinks and graph view are really interesting and allow to link ideas together. Also, is definitely faster than notion 😅.</p>
<p>Thanks Jaga for this discovery!</p>
<h2 id="the-end">The End!</h2>
<p>SoCraTes was a great event! I met new people, learned a lot and had fun, the perfect combination    for a conference.</p>
<p>I came home with a lot of new concepts, tools and inspiration, and I cannot wait for the next event like this (which will be the <a href="https://www.agileday.it/"  target="_blank" >2023 Agile Day</a> Unconference, on Nov. 17 😛).</p>
<p>As always, thanks for all the participants, to the sponsors, organizer and everyone involved. The most meaningful connections happen in a free and creative environment, and that’s exactly what SoCraTes is.</p>
<p>Thanks for reading this long and boring summary, I hope to have shown (even a bit) all I saw and felt during the event. If you find anything to correct (e.g. about your session, about my grammar, or if I forgot something) just contact me via mail or linkedin, or open an issue on this website repository on github.</p>
<p>As always, see you next time!</p>
        ]]></content:encoded></item><item><title>Working Software Conference 2023</title><link>https://marcobacis.com/blog/working-software-2023/</link><pubDate>Sun, 02 Jul 2023 18:00:00 +0100</pubDate><guid>https://marcobacis.com/blog/working-software-2023/</guid><description>&lt;p>Hi 👋 and welcome to a new post!&lt;/p>
&lt;p>Last Friday I attended the 2023 &lt;a href="https://www.agilemovement.it/workingsoftware/" target="_blank" >Working Software Conference&lt;/a> in Milan. The Working Software Conference is an event organised by the &lt;a href="https://agilemovement.it" target="_blank" >Italian Agile Movement&lt;/a>, focused on the second principle of the &lt;a href="https://agilemanifesto.org" target="_blank" >agile manifesto&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>&lt;em>Working software over comprehensive documentation&lt;/em>&lt;/p>
&lt;/blockquote></description><media:content url="https://marcobacis.com/blog/working-software-2023/cover_hu17513308802882800026.jpg" width="480" height="360" medium="image" type="image/jpeg"><media:thumbnail url="https://marcobacis.com/blog/working-software-2023/cover_hu17513308802882800026.jpg" width="480" height="360"/></media:content><content:encoded><![CDATA[
        <img src="https://marcobacis.com/blog/working-software-2023/cover_hu17513308802882800026.jpg" title="%!s(<nil>)" alt="%!s(<nil>)"/>
          <p>Hi 👋 and welcome to a new post!</p>
<p>Last Friday I attended the 2023 <a href="https://www.agilemovement.it/workingsoftware/"  target="_blank" >Working Software Conference</a> in Milan. The Working Software Conference is an event organised by the <a href="https://agilemovement.it"  target="_blank" >Italian Agile Movement</a>, focused on the second principle of the <a href="https://agilemanifesto.org"  target="_blank" >agile manifesto</a>:</p>
<blockquote>
<p><em>Working software over comprehensive documentation</em></p>
</blockquote>
<p>The meaning of this principle is that we should focus on delivering value (the working software) to the user instead of writing extensive specification documents (a.k.a. “wasting time”, as all the requirements and documentation will need to be adapted to change in a very short time).</p>
<p>The conference contained a mixture of front sessions and workshops.
In particular, I attended two workshops, one in the morning and one in the afternoon. In this post I present a small summary and comment of the two workshops, with some considerations at the end.</p>
<p>Enjoy!</p>
<h3 id="affoghiamo-i-microservizi-nella-birra---christian-de-simone-and-alberto-acerbis">“Affoghiamo i microservizi nella birra” - Christian De Simone and Alberto Acerbis</h3>
<p><em>“Let’s drown microservices in beer”</em></p>
<p>The first workshop I attended was held by <a href="https://www.linkedin.com/in/aacerbis/"  target="_blank" >Alberto Acerbis</a> and <a href="https://www.linkedin.com/in/desimonechristian/"  target="_blank" >Christian De Simone</a>, and was about how a monolith can deliver value to the customer in a fast way, and without compromising its future extension and scalability.</p>
<p>The first part was a small exercise: we had to design and start implementing a couple of services (purchases and warehouse) for a small brewery. We divided in groups, and in my team we immediately started splitting the two domains in separate micro services communicating with an external broker. We hadn’t even started to implement the system (just coded the first purchases endpoint) that it was time for a discussion with the other teams.</p>
<p>Every team used a different approach: serverless, microservices, monolith and so on…. in the end, Alberto and Christian discussed the different pros and cons of our solutions, and then presented a way to deliver value to the customer without creating unneeded complexity and costs: a <strong>Modular Monolith</strong>.</p>
<p>Alberto showed an example <a href="https://github.com/BrewUp/WorkingSoftware-2023"  target="_blank" >solution</a>, with the two different domains implemented as projects inside the same solution. Every domain was separated from the other (and the separation checked with <a href="https://archunitnet.readthedocs.io/en/latest/"  target="_blank" >ArchUnit</a> tests) and communicated with a common broker implemented with the <a href="https://github.com/jbogard/MediatR"  target="_blank" >MediatR</a> library. This kind of architecture has the pros of both monolith (fast iterations for a small team and small product) and modular and event-based applications, allowing further extensibility in the future, <strong>if</strong> and when the business will grow.</p>
<p>After seeing the implementation of a modular monolith, a question remained: how do we deploy it? And how do we keep costs to a minimum doing it? Different solutions exist:</p>
<ul>
<li>Monolith executable deployed on a VM</li>
<li>Docker container deployed using docker compose or k8s</li>
<li>Serverless solutions such as container-as-a-service or function-as-a-service</li>
</ul>
<p>Christian showed us a possible solution: given that the first implementation of the system is a simple monolith, it’s possible to keep costs low by taking advantage of managed serverless solutions, and using docker allows to still be prepared for future extensions to the system (e.g. in a Kubernetes cluster).</p>
<p>Our task for the second half of the workshop was to “dockerize” the simple endpoint we developer earlier and push it to a GitHub repository. He then showed us a way of deploying docker containers in production, by using a managed service offered by <a href="https://www.scaleway.com/en/serverless-containers/"  target="_blank" >scaleway</a>.</p>
<p>Finally, it was time to show off how we could deploy to Kubernetes, in case our brewery would grow a lot!! Christian set up a small Kubernetes cluster (always on scaleway) in which to deploy our services when they were pushed on a GitHub repository. He also explained a useful tool for deploying on Kubernetes, called <a href="https://helm.sh"  target="_blank" >helm</a>, which allows to define “charts” (parametrised templates of k8s resources and deployments) that can be deployed as a single unit. Helm is useful both for our projects and to deploy external dependencies (he deployed a MongoDb instance with a click).</p>
<p>Alberto and Christian explained the Modular monolith concept in a easily understandable way, and we were able to gain some concepts and understand the pros and cons of it. In addition, the live code explanation and live deploy to Kubernetes were amazing 😃. I also discovered some tools (MediatR, ArchUnit and helm) that I didn’t know yet, and will try for sure in my projects!</p>
<h3 id="faccio-prima-il-refactor-o-i-tests---gianni-bombelli">“Faccio prima il refactor o i tests?” - Gianni Bombelli</h3>
<p><em>“Should I do refactoring or tests first?”</em></p>
<p>In the afternoon, I participated in a workshop held by <a href="https://www.linkedin.com/in/gianni-bombelli/"  target="_blank" >Gianni Bombelli</a> and focused on testing and refactoring a (small) piece of legacy code.</p>
<p>We started the workshop with a great ice breaker: Gianni gave us a roll of toilet paper and asked each participant to draw as much paper as we usually use…. then, for each square of paper, each one had to say something about him/herself. Even before coding, I learned something 😂 to use less paper…</p>
<p>The workshop exercise was to work in pairs, testing and refactoring a small piece of code (you can find it already solved by Gianni in his <a href="https://github.com/bombo82/workshop-ws-2023"  target="_blank" >repository</a>) themed around the “Another brick in the wall” song by Pink Floyd (obviously, Gianni was wearing a “The Wall” t-shirt 😃). I paired with Christian (from the morning workshop, see above) we started to write a small test for the already implemented method we found in the repo, and….. it threw a “NotTestableCallException”!</p>
<p>Some quick notes about the exercise:</p>
<ul>
<li>We couldn’t use external dependencies and libraries</li>
<li>No Mocks</li>
<li>The code worked in production, even if we encountered difficulties in testing it! So, we should have touched it with care</li>
</ul>
<p>The exception we found was a simple example of what we could find in real production code: a static method to get the logged in user (e.g. taken from spring or from .NET authentication modules), which would work when deployed but not on our local setup.</p>
<p>To continue testing this code we should have removed the exception. But how to remove it without changing the production code and without testing it first? How could we test without refactoring first, and refactor without tests?</p>
<p>Gianni solved this dilemma for us: we could leverage some minimal and automated refactoring (available in most IDEs) to “clean” the code enough to write some tests. In our case, this meant extracting the untestable method in a separate method, and extending the class under test to override the extracted method!</p>
<p>Using an overridden method in a class used only for testing is similar to mocks and stubs, but in this case the “trick” (and the smell) was quite visible (in the tested and the test classes) as a remainder for us to clean this code afterwards.</p>
<p>We used this method for most of the workshop, extracting problematic code from the tested method and using this for our purposes. In particular, we focused on:</p>
<ul>
<li>Static/Singleton objects and methods out of our control</li>
<li>System calls (e.g. the use of DateTime.Now for equality)</li>
<li>Possibile side effects given by external dependencies</li>
</ul>
<p>After covering all the code with tests, we were finally able to refactor it easily. We tried by ping-ponging refactoring pieces of code between me and Christian, and finished in no time!</p>
<p>A last issue we encountered was how to refactor a possible side effect given by the use of a DAO (Data Access Object). Gianni helped us by explaining that in these cases, the issue can be solved with an in-memory structure to mimic the underlying object without using the real dependency.</p>
<p>In the end, we finally refactored the code to our liking, and ended up the workshop with a discussion on what we had learned.</p>
<p>So, what comes first, refactoring or testing? Here&rsquo;s the solution: first, apply the minimum set of “safe” refactoring to make the code testable. Then, cover the code with tests. Only after that you can refactor the code “properly”! In most cases it will be an iterative process of refactor → test → refactor.</p>
<p>Gianni was a great instructor. He let us bang our heads against the code, and only after he showed us how to work with it. His explanations were on point and, most of all, he encouraged us to discuss with him and the other pairs. I learned some neat tricks to work with untested (and untestable) code and it was great!</p>
<h2 id="the-end">The End!</h2>
<p>The Working Software Conference was a great event to meet new people and learn new technologies and ways to work as a software developer. I only attended two workshops, but I would have wanted it to go on for way more than a single day! All the instructors were prepared and engaging, and I learned a lot during the day. I hope to attend other events like this in the near future!</p>
<p>That&rsquo;s all for today. Thanks, and see you next time! 👋</p>
        ]]></content:encoded></item><item><title>My Experience at FOSDEM 2023</title><link>https://marcobacis.com/blog/2023-my-fosdem-experience/</link><pubDate>Tue, 14 Feb 2023 18:00:00 +0100</pubDate><guid>https://marcobacis.com/blog/2023-my-fosdem-experience/</guid><description>&lt;p>Hi 👋 welcome to a new post.&lt;/p>
&lt;p>Today I just want to share some comments about my trip to FOSDEM 2023. This blog is starting to look like a travel blog for meetups and conferences 😅… I promise I’ll post some programming (practical and not) content soon.&lt;/p>
&lt;p>As I already said in my &lt;a href="https://marcobacis.com/blog/2022-a-review/" target="_blank" >2022 review&lt;/a>, one of my goals for 2023 is to attend more conferences and participate more in communities. I must say, I started the year in the right way 🤩.&lt;/p></description><media:content url="https://marcobacis.com/blog/2023-my-fosdem-experience/cover_hu11349680029647870843.jpg" width="480" height="360" medium="image" type="image/jpeg"><media:thumbnail url="https://marcobacis.com/blog/2023-my-fosdem-experience/cover_hu11349680029647870843.jpg" width="480" height="360"/></media:content><content:encoded><![CDATA[
        <img src="https://marcobacis.com/blog/2023-my-fosdem-experience/cover_hu11349680029647870843.jpg" title="%!s(<nil>)" alt="%!s(<nil>)"/>
          <p>Hi 👋 welcome to a new post.</p>
<p>Today I just want to share some comments about my trip to FOSDEM 2023. This blog is starting to look like a travel blog for meetups and conferences 😅… I promise I’ll post some programming (practical and not) content soon.</p>
<p>As I already said in my <a href="https://marcobacis.com/blog/2022-a-review/"  target="_blank" >2022 review</a>, one of my goals for 2023 is to attend more conferences and participate more in communities. I must say, I started the year in the right way 🤩.</p>
<p>I decided to go to FOSDEM in December while talking to some people at the XPUG meetup. After hearing what the event was about, I immediately grabbed a friend and bought the plane tickets to go there!</p>
<p>What is FOSDEM? It’s a free event where developers meet to share ideas and collaborate on open-source software. The event is held every year at the <a href="https://www.ulb.be/en"  target="_blank" >Université Libre de Bruxelles</a>, and is <a href="https://fosdem.org/2023/about/sponsors/"  target="_blank" >sponsored</a> by the main open-source projects and companies.</p>
<p>FOSS stands for “Free and Open Source Software”: free as in both “free beer” and “free speech”. For software to be FOSS, it should give:</p>
<ul>
<li>Freedom to run it</li>
<li>Freedom to access his source code, study it and change it to fit our own necessities</li>
<li>Freedom to share/spread the software (original or modified) to help others</li>
</ul>
<p>Working and using open source software means collaborating with other developers, sharing our programming and product ideas, and together improving the world. And that’s exactly the spirit I saw at FOSDEM!</p>
<h2 id="community-and-inspiration">Community and Inspiration</h2>
<p>I think that being part of a community is great. It gives me a chance to see developers like me, but also completely diverse people.</p>
<p>While at FOSDEM, I experienced this sense of community and diversity firsthand. It felt like being in a sort of “tribe” of nerds/developers gathering for what they love.</p>
<p>The halls of Brussels university were full for both days of the conference. The city itself was conquered by nerds for the entire weekend! During the conference everyone was chatting about their latest projects and ideas.</p>
<p>Also, many open source projects and companies I know (think of the major Linux distros and software companies) were there with their stands, gadgets (Debian was giving away beer!) and stickers!</p>
<p>Being there reminded me of my days at university (not so long ago), hacking silly stuff on my laptop. But in this case, the people speaking and attending the conference were anything but amateurs like me 😅. Open Source can be a way to express ourselves,  to find inspiration and to be part of something bigger, and FOSDEM showed me the way many people are doing it.</p>
<h2 id="list-of-talks-i-attended">List of Talks I attended</h2>
<p>Below you can find the list of talks I personally attended while there. I didn’t attend all the events I wanted (some rooms were full all the time!) and ended up going around the different rooms in search of inspiration.</p>
<p>If you have the time, give them a look!</p>
<p><strong>Saturday</strong></p>
<ul>
<li><a href="https://fosdem.org/2023/schedule/event/gostateofgo/"  target="_blank" >The State of Go</a></li>
<li><a href="https://fosdem.org/2023/schedule/event/goreducecognitive/"  target="_blank" >Recipes for reducing cognitive load (in go)</a></li>
<li><a href="https://fosdem.org/2023/schedule/event/bt_mesh_rust/"  target="_blank" >Developing Bluetooth Mesh Networks with Rust</a></li>
<li><a href="https://fosdem.org/2023/schedule/event/5_errors_when_building/"  target="_blank" >5 errors when building embedded systems</a></li>
<li><a href="https://fosdem.org/2023/schedule/event/making_continuous_delivery_accessible_to_all/"  target="_blank" >Making Continuous Delivery Accessible to All</a></li>
<li><a href="https://fosdem.org/2023/schedule/event/how_to_automate_documentation_workflow_for_developers/"  target="_blank" >How to automate documentation workflow for developers</a></li>
<li><a href="https://fosdem.org/2023/schedule/event/gobuildingdatabase/"  target="_blank" >Our Mad Journey of Building a Vector Database in Go</a></li>
<li><a href="https://fosdem.org/2023/schedule/event/gowatermill/"  target="_blank" >Building a basic event-driven application in go in 20 minutes</a></li>
<li><a href="https://fosdem.org/2023/schedule/event/goisoo/"  target="_blank" >Is Go object-oriented? A case of public opinion</a></li>
</ul>
<p><strong>Sunday</strong></p>
<ul>
<li><a href="https://fosdem.org/2023/schedule/event/rust_coreutils/"  target="_blank" >Reimplementing the Coreutils in a modern language (Rust)</a></li>
<li><a href="https://fosdem.org/2023/schedule/event/zero_knowledge_crypto/"  target="_blank" >Zero-Knowledge Cryptography and anonymous engineering</a></li>
<li><a href="https://fosdem.org/2023/schedule/event/python_build_event_driven_application/"  target="_blank" >How to build an event-driven application in python</a></li>
<li><a href="https://fosdem.org/2023/schedule/event/mutation_testing/"  target="_blank" >Fear the Mutants, love the Mutants</a></li>
<li><a href="https://fosdem.org/2023/schedule/event/sth_to_hide/"  target="_blank" >Having something to hide</a></li>
<li><a href="https://fosdem.org/2023/schedule/event/rust_ebpf/"  target="_blank" >Rust in the Kernel (via eBPF)</a></li>
<li><a href="https://fosdem.org/2023/schedule/event/sbom_key_ingredients/"  target="_blank" >The 7 key ingredients of a great SBOM</a></li>
<li><a href="https://fosdem.org/2023/schedule/event/gb_arm/"  target="_blank" >I made a GameBoy emulator to learn about computers. And now I work with them…</a></li>
</ul>

        ]]></content:encoded></item><item><title>My Experience at the Italian Agile Days 2022: Talks and Reflections</title><link>https://marcobacis.com/blog/2022-italian-agile-days/</link><pubDate>Tue, 17 Jan 2023 18:00:00 +0100</pubDate><guid>https://marcobacis.com/blog/2022-italian-agile-days/</guid><description>&lt;p>Hi 👋&lt;/p>
&lt;p>Today’s post is about my experience at the &lt;a href="https://www.agileday.it/" target="_blank" >Italian Agile Days 2022&lt;/a>, which I attended in October 2022. I know, it’s way too late to write this, but I still think that remembering the talks I watched will be useful for others 😃.&lt;/p>
&lt;p>The Italian Agile Days is a 2-day free conference held in a different city every year, in which people interested in agile practices (programmers and business people alike) gather to talk about agile and development practices.&lt;/p></description><content:encoded><![CDATA[
          <p>Hi 👋</p>
<p>Today’s post is about my experience at the <a href="https://www.agileday.it/"  target="_blank" >Italian Agile Days 2022</a>, which I attended in October 2022. I know, it’s way too late to write this, but I still think that remembering the talks I watched will be useful for others 😃.</p>
<p>The Italian Agile Days is a 2-day free conference held in a different city every year, in which people interested in agile practices (programmers and business people alike) gather to talk about agile and development practices.</p>
<p>This year, the conference was held on the Brescia University campus. It was my first in-person conference in 3 years, and seeing live talks and talking with people with the same interests was refreshing and inspiring!</p>
<p>I mostly watched technical talks about programming, but some of the ones you’ll find below drift from pure programming into the realm of philosophy (and psychology), and they were the most interesting.</p>
<p>Enjoy!</p>
<h2 id="talks">Talks</h2>
<p><em>Disclaimer: most talks were in Italian. The videos are available <a href="https://vimeo.com/showcase/9957525"  target="_blank" >online</a>, here I’ll just post a brief summary and my opinions on the talks.</em></p>
<h3 id="keynote-myth-busting-in-agile-scaling-en---nigel-thurlow">Keynote: Myth busting in agile Scaling (en) - Nigel Thurlow</h3>
<p><a href="https://vimeo.com/767786361"  target="_blank" >Video</a></p>
<p>Nigel has been the first ever Chief of Agile at Toyota, and while there he created “The Flow System”, a flow-based approach to delivering value built on the Toyota system.</p>
<p>In his keynote, he debunks myths and tries to solve the “format war” between agile practices. The talk is packed full of considerations and stories about agile…so full that I cannot summarise it here without writing everything Nigel says. Please go check it out!</p>
<h3 id="event-sourcing--cqrs-a-light-introduction-en---paolo-banfi">Event Sourcing + CQRS: a light introduction (en) - Paolo Banfi</h3>
<p><a href="https://vimeo.com/768885882"  target="_blank" >Video</a></p>
<p>In this talk, the speaker introduces two important concepts that allow to easily change and add functionalities to our systems: event sourcing and CQRS.</p>
<p>To explain them, he presents an example based on a shopping cart, showing that by just saving the current state of the system (as we usually do with databases) we lose information that could be useful to the business. By using event sourcing and CQRS strategies, we employ a more generic model that allows using these pieces of information without making the system much more complex than before.</p>
<p>Paolo does a great introduction to both arguments. Even if I never used event sourcing and CQRS before, I now feel like I should use them in all my future projects!</p>
<h3 id="diamo-una-chance-a-una-codebase-legacy-it---nicola-mincuzzi">Diamo una chance a una codebase legacy? (it) - Nicola Mincuzzi</h3>
<p>“Let’s give a legacy codebase a chance”</p>
<p><a href="https://vimeo.com/768879474"  target="_blank" >Video</a></p>
<p>Working with legacy codebases is a dread. Legacy systems are unstable, and every change to their code or structure leads to bugs and unknown issues, given their lack of tests.</p>
<p>In his talk, Nicola shows a project on which he worked, and describes how he “attacked” the legacy monster by using harnesses and a lot of testing. He basically followed the advice in Michael Feather’s “Working Effectively With Legacy Code&quot; which was effective for real!</p>
<p>Given that this was his first talk, it was great. I’m also working on a nasty legacy project, and seeing other people&rsquo;s (successful) experiences is inspiring and comforting at the same time.</p>
<h3 id="ive-done-tdd-wrong-all-the-time-it---luca-giuberti">I’ve done TDD wrong all the time (it) - Luca Giuberti</h3>
<p><a href="https://vimeo.com/768875860"  target="_blank" >Video</a></p>
<p>In this talk, Luca expresses a common concern that we all think about while writing tests - Am I testing too much the implementation? Do the tests reflect the <strong>what</strong> (the business need), or do they represent the <strong>how</strong> (implementation)?</p>
<p>Luca shows a more sustainable way to test, in a <strong>coarse-grained</strong> fashion. I find this more in line with how I usually test, by testing the behaviour of multiple/larger modules and not of the single classes and methods (with a lot of mocking).</p>
<p>The definition of “unit” is quite confusing. Some of us end up testing single classes or methods in isolation, by mocking every external dependency. Luca’s talk advocates for a coarser grain, like testing multiple (cohesive) classes for their external behaviour. It might seem like integration testing, but it’s not, and I think is a more sound approach.</p>
<h3 id="larte-dello-sviluppatore-it---marco-fracassi">L’arte dello sviluppatore (it) - Marco Fracassi</h3>
<p>“The software developer art”</p>
<p><a href="https://vimeo.com/768873513"  target="_blank" >Video</a></p>
<p>In this philosophical (and humorous) talk, Marco talks about the role of creativity (and how to get creative) in software development.</p>
<p>Software developers are a creative species, despite the stereotypes that others associate with the role (and we get a huge list in the talk). Practices such as pair programming, TDD and DDD are indeed quite creative and, at the time of their definition, were revolutionary.</p>
<p>Software development is a social activity in addition to technical practices, and in this regard, creativity can help us solve problems better. Marco presents a lot of ways to increase creativity personally and in the workplace (by increasing psychological safety) and what tends to stop it (ignorance, hyper-specialization, fear, vanity etc..).</p>
<p>In the end, the talk was very inspiring and showed that there’s a lot of “art” in our practice as software developers.</p>
<h3 id="dal-carbone-al-software-i-sistemi-socio-tecnici-it---ferdinando-santacroce">Dal carbone al software: i sistemi socio-tecnici (it) - Ferdinando Santacroce</h3>
<p>“From coal to software: socio-technical systems”</p>
<p><a href="https://vimeo.com/768881541"  target="_blank" >Video</a></p>
<p>Agile is not just for programmers, and Ferdinando shows us why in his talk. He tells a story set in post-war England, when a technological innovation (the “longwall”) was introduced but didn’t improve productivity, all because of social issues.</p>
<p>The researchers found out that this innovation disrupted (in a bad way) the current social organisation of the mines. From autonomous, cross-functional and trusted teams, the longwall brought hyper-specialisation, control and loss of autonomy and ownership, leading to lower productivity.</p>
<p>This story serves as a reminder that all techniques and practices we see today in agile (such as lean, kanban, XP etc..) didn’t start with programming, but are way older. In addition, we cannot only think about the technical aspects of the organisation, because the social ones are way more important!</p>
<h2 id="conclusion">Conclusion</h2>
<p>I really enjoyed attending this conference!</p>
<p>Each talk explored an argument which I didn’t know and wanted to know more about. I also got to meet new people in a community near me (Brescia is right next to Bergamo and Milan) and I also got gadgets 🤩. In addition, I bought two books from Avanscoperta: “Cronache di Domain-Driven Design” (DDD Chronicles) and “Decision-Making for Software Development Teams”. I hope to read them soon!</p>
<p>That’s all for today. I hope you enjoyed this short summary of my experience at IAD2022, and I hope to attend and write about next year’s conference (and some workshops? 😇).</p>

        ]]></content:encoded></item></channel></rss>